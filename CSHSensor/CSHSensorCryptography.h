

#pragma once


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


extern "C"
{
	#include "ARIAEngine.h"
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



class CCSHSensorCryptography
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CCSHSensorCryptography();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		BYTE masterKey[(INT)(16 + 16)];


	public:
		BYTE roundKey[(INT)(16 * (16 + 1))];


	public:
		TCHAR cryptedWideStringY[512];


	public:
		TCHAR cryptedWideStringN[512];


	public:
		TCHAR cryptedWideString0[512];


	public:
		TCHAR cryptedWideString1[512];


	public:
		TCHAR cryptedWideString2[512];


	public:
		TCHAR cryptedWideString3[512];


	public:
		CHAR cryptedMultyByteStringY[512];


	public:
		CHAR cryptedMultyByteStringN[512];


	public:
		CHAR cryptedMultyByteString0[512];


	public:
		CHAR cryptedMultyByteString1[512];


	public:
		CHAR cryptedMultyByteString2[512];


	public:
		CHAR cryptedMultyByteString3[512];


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID ARIAEncrypt(TCHAR *pCurrentQueryBuffer);


	public:
		VOID ARIADecrypt(TCHAR *pCurrentQueryBuffer);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID SHA256Encrypt(TCHAR *pCurrentQueryBuffer);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID ConvertWideCharToMultyByteChar(CONST TCHAR *pWideCharString, CHAR *pMultyByteCharString);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID ConvertMultyByteCharToWideChar(CONST CHAR *pMultyByteCharString, TCHAR *pWideCharString);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
