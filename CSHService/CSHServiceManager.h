

#pragma once


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class CCSHServiceManager
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		static CCSHServiceManager *pCCSHServiceManager;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CCSHServiceManager(LPTSTR lpServiceName);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		DWORD ServiceRun(CCSHServiceManager &CSHServiceManager);


	public:
		static VOID WINAPI ServiceMain(DWORD dwNumServicesArgs, LPTSTR *lpServiceArgVectors);


	public:
		static DWORD WINAPI ServiceCtrlHandler(DWORD dwControl, DWORD dwEventType, LPVOID lpEventData, LPVOID lpContext);

		
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	private:
		LPTSTR serviceName;


	private:
		SERVICE_STATUS serviceStatus;


	private:
		SERVICE_STATUS_HANDLE serviceStatusHandle;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		HANDLE webSocketServerThreadHandle;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID Start(DWORD dwNumServicesArgs, LPTSTR *lpServiceArgVectors);


	public:
		VOID Stop();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID SessionChange(LPTSTR pQueryBuffer);


	public:
		VOID SetServiceStatus(DWORD dwCurrentState, DWORD dwCurrentWin32ExitCode = NULL, DWORD dwCurrentWaitHint = NULL);


	public:
		VOID ReportErrorEvent(LPTSTR lpCurrentFunctionName, DWORD dwCurrentErrorCode);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID CloseSensorProcess();


	public:
		VOID CloseWebSocketSession();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
