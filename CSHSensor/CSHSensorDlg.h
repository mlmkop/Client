

#pragma once


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#include "afxdialogex.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


static CONST UINT WM_CSHSENSOR_USERSIGNIN = RegisterWindowMessage(_T("CSHSENSORUSERSIGNIN"));


static CONST UINT WM_CSHSENSOR_USERSIGNUP = RegisterWindowMessage(_T("CSHSENSORUSERSIGNUP"));


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


UINT ShieldWatchThread(LPVOID lpVoid);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


UINT SpecificSignOutEventWatchThread(LPVOID lpVoid);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class CCSHSensorDlg : public CDialogEx
{
	public:
		CCSHSensorDlg(CWnd *pParent = nullptr);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		~CCSHSensorDlg();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		enum {IDD = IDD_CSHSENSOR_DIALOG};


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		DECLARE_MESSAGE_MAP()


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		afx_msg VOID OnPaint();


	protected:
		afx_msg HBRUSH OnCtlColor(CDC *pDC, CWnd *pWnd, UINT nCtlColor);


	protected:
		afx_msg VOID OnWindowPosChanging(WINDOWPOS *lpwndpos);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		virtual BOOL OnInitDialog();


	protected:
		virtual VOID DoDataExchange(CDataExchange *pDX);


	protected:
		virtual BOOL PreTranslateMessage(MSG *pMsg);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		HICON m_hIcon;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		DWORD currentActiveUserProcessSessionID;


	public:
		HANDLE currentActiveUserSensorMutex;


	public:
		BOOL visibleGUIFlag;


	public:
		NOTIFYICONDATA currentActiveUserNotifyIconData;


	public:
		CString shieldBackgroundImagePath;


	public:
		CString shieldConfigurationPath;


	public:
		CString shieldModulePath;


	public:
		CString currentActiveUserRegistryPath;


	public:
		CRegKey currentActiveUserRegistryController;


	public:
		TCHAR currentActiveUserIPAddress[512];


	public:
		TCHAR currentActiveUserMACAddress[512];


	public:
		TCHAR currentActiveUserSessionToken[512];


	public:
		TCHAR currentActiveUserSessionTokenPlain[512];


	public:
		BOOL currentActiveUserSignInStatus;


	public:
		HWND currentActiveUserShieldProcessHandle;


	public:
		BOOL preventDuplicateMessageFlag;


	public:
		TCHAR currentActiveUserID[512];


	public:
		TCHAR currentActiveUserPassword[512];


	public:
		CString currentActiveUserNotificationDisplayID;


	public:
		TCHAR currentActiveUserSignUpID[512];


	public:
		TCHAR currentActiveUserSignUpPassword[512];


	public:
		ULONGLONG currentActiveUserSessionTimeout;

	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CStatic signUpIDStatic;


	public:
		CEdit signUpIDEdit;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CStatic signUpPasswordStatic;


	public:
		CEdit signUpPasswordEdit;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CButton signUpConfirmButton;


	public:
		CButton signUpCancleButton;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID CreateTrayNotification();


	public:
		VOID PathConfiguration();


	public:
		VOID LoadOracleDataBaseConfiguration();


	public:
		VOID AuthenticateStatusPathConfiguration();


	public:
		BOOL InvestigateTargetProcess(LPCTSTR targetProcessName, HWND *pCurrentActiveUserProcessHandle);


	public:
		VOID CreateTargetProcess(LPCTSTR targetProcessName);


	public:
		BOOL InvestigateUserAuthenticateStatus();


	public:
		VOID SignUpDisplay();


	public:
		VOID GetSystemScreenSaveConfiguration();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		LRESULT OnCSHSensorTrayNotificationCallBack(WPARAM wParam, LPARAM lParam);


	public:
		LRESULT OnCSHSensorUserSignIn(WPARAM wParam, LPARAM lParam);


	public:
		LRESULT OnCSHSensorUserSignUp(WPARAM wParam, LPARAM lParam);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		afx_msg VOID OnCSHSensorUserSignUp();


	public:
		afx_msg VOID OnCSHSensorUserSignOut();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		afx_msg VOID OnSignUpConfirm();


	public:
		afx_msg VOID OnSignUpCancle();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		afx_msg VOID OnTimer(UINT_PTR nIDEvent);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
		
	public:
		afx_msg BOOL OnQueryEndSession();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
