

#pragma once


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#include "afxdialogex.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


static CONST UINT WM_CSHSENSOR_USERSIGNIN = RegisterWindowMessage(_T("CSHSENSORUSERSIGNIN"));


static CONST UINT WM_CSHSENSOR_USERSIGNUP = RegisterWindowMessage(_T("CSHSENSORUSERSIGNUP"));


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


UINT SensorWatchThread(LPVOID lpVoid);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class CCSHShieldDlg : public CDialogEx
{
	public:
		CCSHShieldDlg(CWnd *pParent = nullptr);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		~CCSHShieldDlg();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		enum {IDD = IDD_CSHSHIELD_DIALOG};


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		DECLARE_MESSAGE_MAP()


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		afx_msg VOID OnPaint();


	protected:
		afx_msg HBRUSH OnCtlColor(CDC *pDC, CWnd *pWnd, UINT nCtlColor);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		virtual BOOL OnInitDialog();


	protected:
		virtual VOID DoDataExchange(CDataExchange *pDX);


	protected:
		virtual BOOL PreTranslateMessage(MSG *pMsg);


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	protected:
		HICON m_hIcon;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		DWORD currentActiveUserProcessSessionID;


	public:
		HANDLE currentActiveUserShieldMutex;


	public:
		CString shieldBackgroundImagePath;


	public:
		CString currentActiveUserRegistryPath;


	public:
		CRegKey currentActiveUserRegistryController;


	public:
		HWND currentActiveUserSensorProcessHandle;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CStatic signInIDStatic;


	public:
		CEdit signInIDEdit;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CStatic signInPasswordStatic;


	public:
		CEdit signInPasswordEdit;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		CButton signInButton;


	public:
		CButton signUpButton;


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		VOID DeleteTrayNotification();


	public:
		VOID PathConfiguration();


	public:
		VOID AuthenticateStatusPathConfiguration();


	public:
		BOOL InvestigateTargetProcess(LPCTSTR targetProcessName, HWND *pCurrentActiveUserProcessHandle);


	public:
		VOID SignInDisplay();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	public:
		afx_msg VOID OnSignIn();


	public:
		afx_msg VOID OnSignUp();


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
